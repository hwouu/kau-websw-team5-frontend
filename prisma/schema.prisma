// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userID        Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  email         String    @unique
  emailVerified Boolean   @default(false)
  adminVerified Boolean   @default(false)
  emailToken    String?
  adminToken    String?
  isMaster      Boolean   @default(false)
  createdAt     DateTime  @default(now())

  reports       Report[] // User가 여러 Reports를 가질 수 있음
}

model Report {
  report_id       String    @id
  user_id         Int
  date            DateTime  @db.Date        // MySQL DATE와 매핑
  time            DateTime  @db.Time        // MySQL TIME과 매핑
  location        String                     // 사고 위치
  accident_type   Json?                      // 사고 유형 (JSON 형식)
  damaged_situation Json?                    // 피해 상황 (JSON 형식)
  number_of_vehicle Int                      // 사고에 연관된 차량 수
  vehicle         Json?                      // 차량 정보 (JSON 형식)
  description     String?   @db.Text         // 사고 상세 설명
  fileUrl         Json?                      
  fileType        String?                    
  created_at      DateTime  @default(now())  
  updated_at      DateTime  @updatedAt       

  // User와의 관계 정의
  User            User      @relation(fields: [user_id], references: [userID])

  // 인덱스
  @@index([user_id], map: "idx_user_id")           // 사용자별 조회를 위한 인덱스
}