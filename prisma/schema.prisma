// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userID        Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  email         String    @unique
  emailVerified Boolean   @default(false)
  adminVerified Boolean   @default(false)
  emailToken    String?
  adminToken    String?
  createdAt     DateTime  @default(now())

  reports       Reports[] // User가 여러 Reports를 가질 수 있음
}

model Reports {
  report_id       String    @id
  user_id         Int       
  case_id         String    
  accident_type   String?   
  location        String    
  date            DateTime  @db.Date // MySQL DATE와 매핑
  time            DateTime  @db.Time // MySQL TIME과 매핑  
  analysis_status String    @default("분석중") 
  accident_name   String?   
  vehicle_1_type  String?   
  vehicle_1_color String?   
  vehicle_2_type  String?   
  vehicle_2_color String?   
  accident_detail String?

  fileUrl         Json? // 업로드된 파일 URL
  fileType        String? // 파일 타입 (image/video)
  description     String? // 보고서 출력 내용 (반환 내용)
  created_at      DateTime  @default(now()) 
  updated_at      DateTime  @updatedAt 

  // User와의 관계 정의
  User            User      @relation(fields: [user_id], references: [userID])

  @@index([user_id], map: "idx_user_id") // 사용자별 조회를 위한 인덱스
  @@index([analysis_status], map: "idx_status") // 상태별 필터링을 위한 인덱스
}
